diff --git a/node_modules/react-native-gesture-handler/android/.project b/node_modules/react-native-gesture-handler/android/.project
new file mode 100644
index 0000000..014db68
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/.project
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>react-native-gesture-handler</name>
+	<comment>Project react-native-gesture-handler created by Buildship.</comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.buildship.core.gradleprojectbuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.eclipse.buildship.core.gradleprojectnature</nature>
+	</natures>
+	<filteredResources>
+		<filter>
+			<id>1749422586896</id>
+			<name></name>
+			<type>30</type>
+			<matcher>
+				<id>org.eclipse.core.resources.regexFilterMatcher</id>
+				<arguments>node_modules|\.git|__CREATED_BY_JAVA_LANGUAGE_SERVER__</arguments>
+			</matcher>
+		</filter>
+	</filteredResources>
+</projectDescription>
diff --git a/node_modules/react-native-gesture-handler/android/bin/build.gradle b/node_modules/react-native-gesture-handler/android/bin/build.gradle
new file mode 100644
index 0000000..99475ac
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/bin/build.gradle
@@ -0,0 +1,253 @@
+import groovy.json.JsonSlurper
+import com.android.build.gradle.tasks.ExternalNativeBuildJsonTask
+
+buildscript {
+    def kotlin_version = rootProject.ext.has('kotlinVersion') ? rootProject.ext.get('kotlinVersion') : project.properties['RNGH_kotlinVersion']
+
+    repositories {
+        mavenCentral()
+        google()
+    }
+
+    dependencies {
+        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
+        classpath("com.android.tools.build:gradle:7.2.1")
+        classpath("com.diffplug.spotless:spotless-plugin-gradle:6.7.2")
+    }
+}
+
+def isNewArchitectureEnabled() {
+    // To opt-in for the New Architecture, you can either:
+    // - Set `newArchEnabled` to true inside the `gradle.properties` file
+    // - Invoke gradle with `-newArchEnabled=true`
+    // - Set an environment variable `ORG_GRADLE_PROJECT_newArchEnabled=true`
+    return project.hasProperty("newArchEnabled") && project.newArchEnabled == "true"
+}
+
+def safeExtGet(prop, fallback) {
+    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
+}
+
+def isGHExampleApp() {
+    return safeExtGet("isGHExampleApp", false)
+}
+
+def resolveReactNativeDirectory() {
+    def reactNativeLocation = safeExtGet("REACT_NATIVE_NODE_MODULES_DIR", null)
+    if (reactNativeLocation != null) {
+        return file(reactNativeLocation)
+    }
+
+    // Fallback to node resolver for custom directory structures like monorepos.
+    def reactNativePackage = file(["node", "--print", "require.resolve('react-native/package.json')"].execute(null, rootDir).text.trim())
+    if (reactNativePackage.exists()) {
+        return reactNativePackage.parentFile
+    }
+
+    throw new Exception(
+            "[react-native-gesture-handler] Unable to resolve react-native location in " +
+                    "node_modules. You should add project extension property (in app/build.gradle) " +
+                    "`REACT_NATIVE_NODE_MODULES_DIR` with path to react-native."
+    )
+}
+
+if (isNewArchitectureEnabled()) {
+    apply plugin: 'com.facebook.react'
+}
+apply plugin: 'com.android.library'
+apply plugin: 'kotlin-android'
+
+if (project == rootProject) {
+    apply from: "spotless.gradle"
+}
+
+// Check whether Reanimated 2.3 or higher is installed alongside Gesture Handler
+def shouldUseCommonInterfaceFromReanimated() {
+    def reanimated = rootProject.subprojects.find { it.name == 'react-native-reanimated' }
+    if (reanimated != null) {
+        def inputFile = new File(reanimated.projectDir, '../package.json')
+        def json = new JsonSlurper().parseText(inputFile.text)
+        def reanimatedVersion = json.version as String
+        def (major, minor, patch) = reanimatedVersion.tokenize('.')
+        return (Integer.parseInt(major) == 2 && Integer.parseInt(minor) >= 3) || Integer.parseInt(major) >= 3
+    } else {
+        return false
+    }
+}
+
+def shouldUseCommonInterfaceFromRNSVG() {
+    // common interface compatible with react-native-svg >= 15.11.2
+    def rnsvg = rootProject.subprojects.find { it.name == 'react-native-svg' }
+    if (rnsvg == null) {
+        return false
+    }
+
+    def inputFile = new File(rnsvg.projectDir, '../package.json')
+    def json = new JsonSlurper().parseText(inputFile.text)
+    def rnsvgVersion = json.version as String
+    def (major, minor, patch) = rnsvgVersion.tokenize('.')
+    return (Integer.parseInt(major) == 15 && Integer.parseInt(minor) == 11 && Integer.parseInt(patch) >= 2) ||
+            (Integer.parseInt(major) == 15 && Integer.parseInt(minor) > 11) ||
+            Integer.parseInt(major) > 15
+}
+
+def reactNativeArchitectures() {
+    def value = project.getProperties().get("reactNativeArchitectures")
+    return value ? value.split(",") : ["armeabi-v7a", "x86", "x86_64", "arm64-v8a"]
+}
+
+def REACT_NATIVE_DIR = resolveReactNativeDirectory()
+
+def reactProperties = new Properties()
+file("$REACT_NATIVE_DIR/ReactAndroid/gradle.properties").withInputStream { reactProperties.load(it) }
+
+def REACT_NATIVE_VERSION = reactProperties.getProperty("VERSION_NAME")
+def REACT_NATIVE_MINOR_VERSION = REACT_NATIVE_VERSION.startsWith("0.0.0-") ? 1000 : REACT_NATIVE_VERSION.split("\\.")[1].toInteger()
+
+repositories {
+    mavenCentral()
+}
+
+android {
+    compileSdkVersion safeExtGet("compileSdkVersion", 33)
+
+    namespace "com.swmansion.gesturehandler"
+    buildFeatures {
+        buildConfig = true
+        prefab = true
+    }
+
+    // Used to override the NDK path/version on internal CI or by allowing
+    // users to customize the NDK path/version from their root project (e.g. for M1 support)
+    if (rootProject.hasProperty("ndkPath")) {
+        ndkPath rootProject.ext.ndkPath
+    }
+    if (rootProject.hasProperty("ndkVersion")) {
+        ndkVersion rootProject.ext.ndkVersion
+    }
+
+    defaultConfig {
+        minSdkVersion safeExtGet('minSdkVersion', 21)
+        targetSdkVersion safeExtGet('targetSdkVersion', 33)
+        versionCode 1
+        versionName "1.0"
+        buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
+        buildConfigField "int", "REACT_NATIVE_MINOR_VERSION", REACT_NATIVE_MINOR_VERSION.toString()
+
+        if (isNewArchitectureEnabled()) {
+            var appProject = rootProject.allprojects.find { it.plugins.hasPlugin('com.android.application') }
+            externalNativeBuild {
+                cmake {
+                    cppFlags "-O2", "-frtti", "-fexceptions", "-Wall", "-Werror", "-std=c++20", "-DANDROID"
+                    arguments "-DREACT_NATIVE_DIR=${REACT_NATIVE_DIR}",
+                            "-DREACT_NATIVE_MINOR_VERSION=${REACT_NATIVE_MINOR_VERSION}",
+                            "-DANDROID_STL=c++_shared",
+                            "-DANDROID_SUPPORT_FLEXIBLE_PAGE_SIZES=ON"
+                    abiFilters(*reactNativeArchitectures())
+                }
+            }
+        }
+    }
+
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_8
+        targetCompatibility JavaVersion.VERSION_1_8
+    }
+
+    if (isNewArchitectureEnabled()) {
+        externalNativeBuild {
+            cmake {
+                path "src/main/jni/CMakeLists.txt"
+            }
+        }
+    }
+
+    packagingOptions {
+        // For some reason gradle only complains about the duplicated version of libreact_render libraries
+        // while there are more libraries copied in intermediates folder of the lib build directory, we exclude
+        // only the ones that make the build fail (ideally we should only include libgesturehandler but we
+        // are only allowed to specify exclude patterns)
+        exclude "**/libreact_render*.so"
+        exclude "**/libreactnative.so"
+        exclude "**/libjsi.so"
+        exclude "**/libc++_shared.so"
+    }
+
+    sourceSets.main {
+        java {
+            // Include "common/" only when it's not provided by Reanimated to mitigate
+            // multiple definitions of the same class preventing build
+            if (shouldUseCommonInterfaceFromReanimated()) {
+                srcDirs += 'reanimated/src/main/java'
+            } else {
+                srcDirs += 'common/src/main/java'
+                srcDirs += 'noreanimated/src/main/java'
+            }
+
+            if (shouldUseCommonInterfaceFromRNSVG()) {
+                srcDirs += 'svg/src/main/java'
+            } else {
+                srcDirs += 'nosvg/src/main/java'
+            }
+
+            if (isNewArchitectureEnabled()) {
+                srcDirs += 'fabric/src/main/java'
+            } else {
+                // 'paper/src/main/java' includes files from codegen so the library can compile with
+                // codegen turned off
+                
+                if (REACT_NATIVE_MINOR_VERSION > 77) {
+                    srcDirs += 'paper/src/main/java'
+                } else {
+                    srcDirs += 'paper77/src/main/java'
+                }
+            }
+
+            if (REACT_NATIVE_MINOR_VERSION >= 77) {
+                // With RN 0.77, ViewManager related functions in the package has different signatures as they 
+                // are no longer nullable
+                srcDirs += 'package77/src/main/java'
+            } else {
+                // It's safe to delete this block once we drop support for RN 0.76
+                srcDirs += 'packageDeprecated/src/main/java'
+            }
+        }
+    }
+
+    if (isGHExampleApp()) {
+        tasks.withType(ExternalNativeBuildJsonTask) {
+            compileTask ->
+                compileTask.doLast {
+                    def rootDir = new File("${project.projectDir}/..")
+                    def generated = new File("${compileTask.abi.getCxxBuildFolder()}/compile_commands.json")
+                    def output = new File("${rootDir}/compile_commands.json")
+                    output.text = generated.text
+
+                    println("Generated clangd metadata.")
+                }
+        }
+    }
+}
+
+def kotlin_version = safeExtGet('kotlinVersion', project.properties['RNGH_kotlinVersion'])
+
+dependencies {
+    implementation 'com.facebook.react:react-native:+' // from node_modules
+
+
+    if (shouldUseCommonInterfaceFromReanimated()) {
+        // Include Reanimated as dependency to load the common interface
+        implementation(rootProject.subprojects.find { it.name == 'react-native-reanimated' }) {
+            // resolves "Duplicate class com.facebook.jni.CppException"
+            exclude group: 'com.facebook.fbjni'
+        }
+    }
+
+    if (shouldUseCommonInterfaceFromRNSVG()) {
+        implementation rootProject.subprojects.find { it.name == 'react-native-svg' }
+    }
+
+    implementation 'androidx.appcompat:appcompat:1.2.0'
+    implementation "androidx.core:core-ktx:1.6.0"
+    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
+}
diff --git a/node_modules/react-native-gesture-handler/android/bin/fabric/src/main/java/com/swmansion/gesturehandler/RNGestureHandlerComponentsRegistry.class b/node_modules/react-native-gesture-handler/android/bin/fabric/src/main/java/com/swmansion/gesturehandler/RNGestureHandlerComponentsRegistry.class
new file mode 100644
index 0000000..2359270
Binary files /dev/null and b/node_modules/react-native-gesture-handler/android/bin/fabric/src/main/java/com/swmansion/gesturehandler/RNGestureHandlerComponentsRegistry.class differ
diff --git a/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerDelegate.class b/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerDelegate.class
new file mode 100644
index 0000000..29a343c
Binary files /dev/null and b/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerDelegate.class differ
diff --git a/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerInterface.class b/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerInterface.class
new file mode 100644
index 0000000..fc4e41f
Binary files /dev/null and b/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerInterface.class differ
diff --git a/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerDelegate.class b/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerDelegate.class
new file mode 100644
index 0000000..d262eb0
Binary files /dev/null and b/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerDelegate.class differ
diff --git a/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerInterface.class b/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerInterface.class
new file mode 100644
index 0000000..30f593c
Binary files /dev/null and b/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerInterface.class differ
diff --git a/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/swmansion/gesturehandler/NativeRNGestureHandlerModuleSpec.class b/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/swmansion/gesturehandler/NativeRNGestureHandlerModuleSpec.class
new file mode 100644
index 0000000..21079b1
Binary files /dev/null and b/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/swmansion/gesturehandler/NativeRNGestureHandlerModuleSpec.class differ
diff --git a/node_modules/react-native-gesture-handler/android/bin/paper77/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerDelegate.class b/node_modules/react-native-gesture-handler/android/bin/paper77/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerDelegate.class
new file mode 100644
index 0000000..e32cb24
Binary files /dev/null and b/node_modules/react-native-gesture-handler/android/bin/paper77/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerDelegate.class differ
diff --git a/node_modules/react-native-gesture-handler/android/bin/paper77/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerInterface.class b/node_modules/react-native-gesture-handler/android/bin/paper77/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerInterface.class
new file mode 100644
index 0000000..2f9442e
Binary files /dev/null and b/node_modules/react-native-gesture-handler/android/bin/paper77/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerInterface.class differ
diff --git a/node_modules/react-native-gesture-handler/android/bin/paper77/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerDelegate.class b/node_modules/react-native-gesture-handler/android/bin/paper77/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerDelegate.class
new file mode 100644
index 0000000..fdefa48
Binary files /dev/null and b/node_modules/react-native-gesture-handler/android/bin/paper77/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerDelegate.class differ
diff --git a/node_modules/react-native-gesture-handler/android/bin/paper77/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerInterface.class b/node_modules/react-native-gesture-handler/android/bin/paper77/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerInterface.class
new file mode 100644
index 0000000..750bc58
Binary files /dev/null and b/node_modules/react-native-gesture-handler/android/bin/paper77/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerInterface.class differ
diff --git a/node_modules/react-native-gesture-handler/android/bin/paper77/src/main/java/com/swmansion/gesturehandler/NativeRNGestureHandlerModuleSpec.class b/node_modules/react-native-gesture-handler/android/bin/paper77/src/main/java/com/swmansion/gesturehandler/NativeRNGestureHandlerModuleSpec.class
new file mode 100644
index 0000000..897e934
Binary files /dev/null and b/node_modules/react-native-gesture-handler/android/bin/paper77/src/main/java/com/swmansion/gesturehandler/NativeRNGestureHandlerModuleSpec.class differ
diff --git a/node_modules/react-native-gesture-handler/android/bin/src/main/java/com/swmansion/gesturehandler/core/ScaleGestureDetector$OnScaleGestureListener.class b/node_modules/react-native-gesture-handler/android/bin/src/main/java/com/swmansion/gesturehandler/core/ScaleGestureDetector$OnScaleGestureListener.class
new file mode 100644
index 0000000..6b418fb
Binary files /dev/null and b/node_modules/react-native-gesture-handler/android/bin/src/main/java/com/swmansion/gesturehandler/core/ScaleGestureDetector$OnScaleGestureListener.class differ
diff --git a/node_modules/react-native-gesture-handler/android/bin/src/main/java/com/swmansion/gesturehandler/core/ScaleGestureDetector$SimpleOnScaleGestureListener.class b/node_modules/react-native-gesture-handler/android/bin/src/main/java/com/swmansion/gesturehandler/core/ScaleGestureDetector$SimpleOnScaleGestureListener.class
new file mode 100644
index 0000000..f2f4465
Binary files /dev/null and b/node_modules/react-native-gesture-handler/android/bin/src/main/java/com/swmansion/gesturehandler/core/ScaleGestureDetector$SimpleOnScaleGestureListener.class differ
diff --git a/node_modules/react-native-gesture-handler/android/bin/src/main/java/com/swmansion/gesturehandler/core/ScaleGestureDetector.class b/node_modules/react-native-gesture-handler/android/bin/src/main/java/com/swmansion/gesturehandler/core/ScaleGestureDetector.class
new file mode 100644
index 0000000..68f7ff9
Binary files /dev/null and b/node_modules/react-native-gesture-handler/android/bin/src/main/java/com/swmansion/gesturehandler/core/ScaleGestureDetector.class differ
diff --git a/node_modules/react-native-gesture-handler/android/bin/src/main/jni/cpp-adapter.cpp b/node_modules/react-native-gesture-handler/android/bin/src/main/jni/cpp-adapter.cpp
new file mode 100644
index 0000000..cd2dfa7
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/bin/src/main/jni/cpp-adapter.cpp
@@ -0,0 +1,47 @@
+#include <jni.h>
+#include <jsi/jsi.h>
+
+#include <react/renderer/uimanager/primitives.h>
+
+using namespace facebook;
+using namespace react;
+
+void decorateRuntime(jsi::Runtime &runtime) {
+    auto isViewFlatteningDisabled = jsi::Function::createFromHostFunction(
+            runtime,
+            jsi::PropNameID::forAscii(runtime, "isViewFlatteningDisabled"),
+            1,
+            [](jsi::Runtime &runtime,
+               const jsi::Value &thisValue,
+               const jsi::Value *arguments,
+               size_t count) -> jsi::Value {
+                if (!arguments[0].isObject()) {
+                    return jsi::Value::null();
+                }
+
+                auto shadowNode = shadowNodeFromValue(runtime, arguments[0]);
+                bool isViewFlatteningDisabled = shadowNode->getTraits().check(
+                        ShadowNodeTraits::FormsStackingContext);
+
+                // This is done using component names instead of type checking because
+                // of duplicate symbols for RN types, which prevent RTTI from working.
+                const char *componentName = shadowNode->getComponentName();
+                bool isTextComponent = strcmp(componentName, "Paragraph") == 0 ||
+                                       strcmp(componentName, "Text") == 0;
+
+                return jsi::Value(isViewFlatteningDisabled || isTextComponent);
+            });
+    runtime.global().setProperty(
+            runtime, "isViewFlatteningDisabled", std::move(isViewFlatteningDisabled));
+}
+
+extern "C" JNIEXPORT void JNICALL
+Java_com_swmansion_gesturehandler_react_RNGestureHandlerModule_decorateRuntime(
+        JNIEnv *env,
+        jobject clazz,
+        jlong jsiPtr) {
+    jsi::Runtime *runtime = reinterpret_cast<jsi::Runtime *>(jsiPtr);
+    if (runtime) {
+        decorateRuntime(*runtime);
+    }
+}
diff --git a/node_modules/react-native-gesture-handler/src/components/Pressable/Pressable.tsx b/node_modules/react-native-gesture-handler/src/components/Pressable/Pressable.tsx
index b288991..9bda043 100644
--- a/node_modules/react-native-gesture-handler/src/components/Pressable/Pressable.tsx
+++ b/node_modules/react-native-gesture-handler/src/components/Pressable/Pressable.tsx
@@ -456,7 +456,9 @@ const Pressable = forwardRef(
           testOnly_onLongPress={IS_TEST_ENV ? onLongPress : undefined}>
           {childrenProp}
           {__DEV__ ? (
-            <PressabilityDebugView color="red" hitSlop={normalizedHitSlop} />
+            <PressabilityDebugView
+            //  color="red"
+              hitSlop={normalizedHitSlop} />
           ) : null}
         </NativeButton>
       </GestureDetector>
